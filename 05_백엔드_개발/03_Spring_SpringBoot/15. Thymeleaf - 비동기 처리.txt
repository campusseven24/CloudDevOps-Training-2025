1. 기본 개념 
    1) 동기 (Synchronus) 처리 
        - 작업1 실행 -> 완료 대기 
        - 작업2 실행 -> 완료 대기 
        - 작업3 실행 -> 완료 대기 

        - 총 시간 = 작업1 + 작업2 + 작업3
        - 한 작업이 끝날때까지 대기 
        - 브라우저가 멈춤 것처럼 보임  

    2) 비동기 (Asynchrous) 처리 
        - 작업1 시작 -> 다음 코드 실행
        - 작업2 시작 -> 다음 코드 실행
        - 작업3 시작 -> 다음 코드 실행

        - 총 시간 = 가장 긴 작업 시간 
        - 여러 작업 동시 처리 
        - UI가 멈추지 않음 

    3) 비동기 전송 (Asynchrous transmission)
        - 작업이 완료될 때까지 기다리지 않고 
          다음 작업으로 넘어가기 위해 데이터를 전송하거나 요청하는 프로세스를 말함.
        - 데이터 전송이나 요청이 처리하는 동안 다른 작업을 계속할 수 있음
            - 애플리케이션의 성능과 응답성이 향성될 수 있음 

        - 일반적으로 서버에 요청을 하고 서버의 응답을 기다리는 동안 
          UI를 차단하지 않는 작업이 포함됨 

        - 서버가 응답하면 콜백 함수나 Promise가 응답을 처리함.                          

    4) JavaScript 비동기 전송 기술 
        - 역할
            - 데이터를 비동적으로 전송
            - 서버의 응답을 처리할 수 있음 
        - 두가지 방식 
            - fetch를 사용한 비동기 통신
            - async/await를 사용한 비동기 통신     